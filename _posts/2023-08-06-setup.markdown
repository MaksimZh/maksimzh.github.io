---
layout: post
title:  "Настройка блога"
date:   2023-08-06
---
# Вместо предисловия
Дорогой читатель! Это мой первый пост моего первого блога.

Почему я выбрал именно GitHub Pages и Jekyll?
Потому что, это работает!
Для меня это решающее преимущество.
Я уже потратил достаточно времени разбираясь в причинах,
по которым тот или иной инструмент не работает в моём случае,
и извлёк важный урок:

> Если инструмент не работает, его следует немедленно выбросить!

Что же делать, если ничего не работает?
А вот что:

> Если не удаётся найти подходящий инструмент, стоит поискать другое занятие.

Радикально? Возможно.
У правил бывают исключения, но что мы теряем?
Если достойной альтернативы действительно нет, то мы вернёмся обратно,
но уже будучи уверенными, что занимаемся именно тем, чем хотим,
наилучшим из возможных способов.

В общем случае, выбрасывая негодные инструменты и неподходящие занятия,
можно сэкономить много *времени* и, что гораздо важнее, *внимания*.
Про вещи, которые для продуктивной деятельности важнее времени подробнее можно
узнать, например, у
[Максима Дорофеева](https://www.youtube.com/watch?v=5iVPjmcvhFo)


# Блог - это сайт
Что нужно для сайта?
  
 1. информация, которую мы хотим опубликовать;
 2. механизм преобразования информации в формат HTML, понятный браузерам;
 3. хостинг - место, где он будет публиковаться.

Если вам нечего публиковать, нет информации,
то, очевидно, стоит поискать другое занятие :)

Для преобразования информации в HTML мне подошёл Jekyll. \
Если вам это не подходит - выбросьте его немедленно!
Возьмите что-то, что подходит!

В качестве хостинга мне <s>посоветовали</s> подошёл GitHub Pages \
Если вам это не подоходит...
Думаю, принцип понятен :)

Создать блог получилось не с первой попытки,
несколько инструкций пришлось выбросить,
потому что для меня они *не сработали*.


# Установка Jekyll
Для установки Jekyll под Windows я использовал
[инструкцию с официального сайта](https://jekyllrb.com/docs/installation/windows/).

Чем эта инструкция замечательна, так это тем, что там нет столь популярного
разделов "Common issues", "Troubleshooting" или чего-то в этом роде.
Есть только рекомендация в случае ошибки
сообщить о неисправности системы установки:
![скриншот](/assets/jekyll-install-issue.png)
Видимо, создатели этой системы уделяют больше внимания тому,
чтобы их продукт можно было хотя бы установить,
а не сочинением инструкций о том, как конечному пользователю
доделывать эту работу за них.
Отрадно видеть стремление к такому высокому уровню качества!


# Создание сайта
Согласно [инструкции](https://jekyllrb.com/docs/),
когда Jekyll установлен, сайт создаётся одной командой:
```
jekyll new <имя_каталога>
```
Поскольку я изначально планировал публиковать сайт на GitHub Pages,
имя репозитория было вполне определённым:
```
<ник_на_GitHub>.github.io
```
Вот что получилось:
![скриншот](/assets/jekyll-new.png)

Теперь можно организовать локальный "хостинг" на своём компьютере
и увидеть сайт вживую в браузере.
Это делается с помощью команды
```
bundle exec jekyll serve --livereload
```
Запускать её нужно из нашего нового каталога:
![скриншот](/assets/jekyll-new-serve.png)

Опция `--livereload` нужна, если вы хотите, чтобы изменения,
сделанные в исходном коде, сразу же отображались на сайте.
Это очень удобно, особенно если у вас на экране (или экранах)
достаточно места для редактора и браузера.

**Только не закрывайте окно терминала!**
Иначе локальный сервер, на котором размещён ваш сайт, завершит свою работу.

Всё прошло хорошо, и я увидел сайт по адресу
[http://localhost:4000](http://localhost:4000):
![скриншот](/assets/jekyll-site-in-browser.png)


# Наполнение сайта
О том, как добавлять и редактировать посты можно подробнее прочитать
[здесь](https://jekyllrb.com/docs/posts/).
Новое содержимое будет мгновенно отображаться в браузере
благодаря опции `--livereload`.

Перед этим, скорее всего, захочется изменить стандартный заголовок
и прочую информацию.
Это делается в файле `_config.yml` в корневом каталоге сайта:
![скриншот](/assets/jekyll-config.png)

**После изменения этого файла сервер нужно перезапустить!**
То есть, нужно прервать его выполнение с помощью комбинации `Ctrl+C`,
и снова выполнить команду:
```
bundle exec jekyll serve --livereload
```


# Публикация сайта
Теперь можно опубликовать сайт на GitHub Pages.

Проще всего это сделать через Visual Studio Code.
Для этого должен быть установлен Git, и нужен профиль на GitHub.

Сначала открываем корневой каталог сайта в Visual Studio Code,
а дальше всё делается за три щелчка мышью:
![скриншот](/assets/vscode-publish.png)
 1. перейти на вкладку "Source Control" на панели справа;
 2. нажать кнопку "Publish to GitHub";
 3. выбрать пункт "Publish to GitHub public repository.

Ну, или не три.
Может еще потребоваться авторизация на GitHub.

Когда репозиторий будет создан и опубликован,
появится вот такое всплывающее окно:
![скриншот](/assets/github-success.png)

Можно нажать кнопку "Open on GitHub" и убедиться,
что репозиторий правильно настроен:
![скриншот](/assets/github-pages.png)
